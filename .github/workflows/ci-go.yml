# Continuous Integration workflow for Go projects. For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
# https://golangci-lint.run/usage/install#github-actions

name: Continuous Integration - Go

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-opa:
    name: Run OPA tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest
      - name: Run tests
        run: make test-opa

  test-runs:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run tests
        run: make bin/ak test-runs

  verify-docker-builds:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup version info
        run: |
          # These are consumed in the Dockerfile.
          echo "${GITHUB_REF#refs/tags/}" > .version
          echo "${GITHUB_SHA}" > .commit
      - name: Verify Image Builds
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          tags: autokitteh:latest
          push: false
          provenance: false

  publish_docker_image:
    needs:
      # - test-sessions
      - test-runs
      # - static-analysis
      # - build-and-test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup version info
        run: |
          # These are consumed in the Dockerfile.
          echo "${GITHUB_REF#refs/tags/}" > .version
          echo "${GITHUB_SHA}" > .commit
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          role-session-name: Github_Action_Release_Autokitteh
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build And Push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ steps.login-ecr.outputs.registry }}/autokitteh:latest
          push: true
          provenance: false
