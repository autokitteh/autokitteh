(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="092f5291-6c84-4abb-9597-399f595b8b39",e._sentryDebugIdIdentifier="sentry-dbid-092f5291-6c84-4abb-9597-399f595b8b39")}catch{}})();class o extends Error{}o.prototype.name="InvalidTokenError";function i(e){return decodeURIComponent(atob(e).replace(/(.)/g,(t,r)=>{let n=r.charCodeAt(0).toString(16).toUpperCase();return n.length<2&&(n="0"+n),"%"+n}))}function d(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return i(t)}catch{return atob(t)}}function c(e,t){if(typeof e!="string")throw new o("Invalid token specified: must be a string");t||(t={});const r=t.header===!0?0:1,n=e.split(".")[r];if(typeof n!="string")throw new o(`Invalid token specified: missing part #${r+1}`);let s;try{s=d(n)}catch(a){throw new o(`Invalid token specified: invalid base64 for part #${r+1} (${a.message})`)}try{return JSON.parse(s)}catch(a){throw new o(`Invalid token specified: invalid json for part #${r+1} (${a.message})`)}}export{c as j};
