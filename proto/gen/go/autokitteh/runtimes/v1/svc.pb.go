// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: autokitteh/runtimes/v1/svc.proto

package runtimesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "go.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/program/v1"
	v11 "go.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/values/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DescribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DescribeRequest) Reset() {
	*x = DescribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRequest) ProtoMessage() {}

func (x *DescribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRequest.ProtoReflect.Descriptor instead.
func (*DescribeRequest) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{0}
}

func (x *DescribeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Runtime *Runtime `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"` // empty if not found.
}

func (x *DescribeResponse) Reset() {
	*x = DescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeResponse) ProtoMessage() {}

func (x *DescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeResponse.ProtoReflect.Descriptor instead.
func (*DescribeResponse) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeResponse) GetRuntime() *Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{2}
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Runtimes []*Runtime `protobuf:"bytes,1,rep,name=runtimes,proto3" json:"runtimes,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{3}
}

func (x *ListResponse) GetRuntimes() []*Runtime {
	if x != nil {
		return x.Runtimes
	}
	return nil
}

type BuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources map[string][]byte `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Symbols   []string          `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Memo      map[string]string `protobuf:"bytes,3,rep,name=memo,proto3" json:"memo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuildRequest) Reset() {
	*x = BuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRequest) ProtoMessage() {}

func (x *BuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRequest.ProtoReflect.Descriptor instead.
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{4}
}

func (x *BuildRequest) GetResources() map[string][]byte {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *BuildRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *BuildRequest) GetMemo() map[string]string {
	if x != nil {
		return x.Memo
	}
	return nil
}

type BuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildFile []byte    `protobuf:"bytes,1,opt,name=build_file,json=buildFile,proto3" json:"build_file,omitempty"`
	Error     *v1.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BuildResponse) Reset() {
	*x = BuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResponse) ProtoMessage() {}

func (x *BuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResponse.ProtoReflect.Descriptor instead.
func (*BuildResponse) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{5}
}

func (x *BuildResponse) GetBuildFile() []byte {
	if x != nil {
		return x.BuildFile
	}
	return nil
}

func (x *BuildResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Build1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources   map[string][]byte `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Symbols     []string          `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Path        string            `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	RuntimeName string            `protobuf:"bytes,4,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
}

func (x *Build1Request) Reset() {
	*x = Build1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Build1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Build1Request) ProtoMessage() {}

func (x *Build1Request) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Build1Request.ProtoReflect.Descriptor instead.
func (*Build1Request) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{6}
}

func (x *Build1Request) GetResources() map[string][]byte {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Build1Request) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *Build1Request) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Build1Request) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

type Build1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifact *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Error    *v1.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Build1Response) Reset() {
	*x = Build1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Build1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Build1Response) ProtoMessage() {}

func (x *Build1Response) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Build1Response.ProtoReflect.Descriptor instead.
func (*Build1Response) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{7}
}

func (x *Build1Response) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *Build1Response) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunId    string                `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Artifact []byte                `protobuf:"bytes,2,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Path     string                `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Globals  map[string]*v11.Value `protobuf:"bytes,4,rep,name=globals,proto3" json:"globals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{8}
}

func (x *RunRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *RunRequest) GetArtifact() []byte {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *RunRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RunRequest) GetGlobals() map[string]*v11.Value {
	if x != nil {
		return x.Globals
	}
	return nil
}

type RunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// either of
	Print  string                `protobuf:"bytes,1,opt,name=print,proto3" json:"print,omitempty"`
	Error  *v1.Error             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Result map[string]*v11.Value `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{9}
}

func (x *RunResponse) GetPrint() string {
	if x != nil {
		return x.Print
	}
	return ""
}

func (x *RunResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RunResponse) GetResult() map[string]*v11.Value {
	if x != nil {
		return x.Result
	}
	return nil
}

type BidiRunCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  *v11.Value            `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Args   []*v11.Value          `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Kwargs map[string]*v11.Value `protobuf:"bytes,4,rep,name=kwargs,proto3" json:"kwargs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BidiRunCall) Reset() {
	*x = BidiRunCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunCall) ProtoMessage() {}

func (x *BidiRunCall) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunCall.ProtoReflect.Descriptor instead.
func (*BidiRunCall) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{10}
}

func (x *BidiRunCall) GetValue() *v11.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BidiRunCall) GetArgs() []*v11.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *BidiRunCall) GetKwargs() map[string]*v11.Value {
	if x != nil {
		return x.Kwargs
	}
	return nil
}

type BidiRunCallReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*BidiRunCallReturn_Value
	//	*BidiRunCallReturn_Error
	Result isBidiRunCallReturn_Result `protobuf_oneof:"result"`
}

func (x *BidiRunCallReturn) Reset() {
	*x = BidiRunCallReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunCallReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunCallReturn) ProtoMessage() {}

func (x *BidiRunCallReturn) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunCallReturn.ProtoReflect.Descriptor instead.
func (*BidiRunCallReturn) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{11}
}

func (m *BidiRunCallReturn) GetResult() isBidiRunCallReturn_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *BidiRunCallReturn) GetValue() *v11.Value {
	if x, ok := x.GetResult().(*BidiRunCallReturn_Value); ok {
		return x.Value
	}
	return nil
}

func (x *BidiRunCallReturn) GetError() *v1.Error {
	if x, ok := x.GetResult().(*BidiRunCallReturn_Error); ok {
		return x.Error
	}
	return nil
}

type isBidiRunCallReturn_Result interface {
	isBidiRunCallReturn_Result()
}

type BidiRunCallReturn_Value struct {
	Value *v11.Value `protobuf:"bytes,1,opt,name=value,proto3,oneof"`
}

type BidiRunCallReturn_Error struct {
	Error *v1.Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*BidiRunCallReturn_Value) isBidiRunCallReturn_Result() {}

func (*BidiRunCallReturn_Error) isBidiRunCallReturn_Result() {}

type BidiRunLoadReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*v11.Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error  *v1.Error             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BidiRunLoadReturn) Reset() {
	*x = BidiRunLoadReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunLoadReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunLoadReturn) ProtoMessage() {}

func (x *BidiRunLoadReturn) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunLoadReturn.ProtoReflect.Descriptor instead.
func (*BidiRunLoadReturn) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{12}
}

func (x *BidiRunLoadReturn) GetValues() map[string]*v11.Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *BidiRunLoadReturn) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type BidiRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*BidiRunRequest_Start_
	//	*BidiRunRequest_Start1_
	//	*BidiRunRequest_Call_
	//	*BidiRunRequest_CallReturn
	//	*BidiRunRequest_LoadReturn
	//	*BidiRunRequest_NewRunIdValue
	Request isBidiRunRequest_Request `protobuf_oneof:"request"`
}

func (x *BidiRunRequest) Reset() {
	*x = BidiRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunRequest) ProtoMessage() {}

func (x *BidiRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunRequest.ProtoReflect.Descriptor instead.
func (*BidiRunRequest) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{13}
}

func (m *BidiRunRequest) GetRequest() isBidiRunRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *BidiRunRequest) GetStart() *BidiRunRequest_Start {
	if x, ok := x.GetRequest().(*BidiRunRequest_Start_); ok {
		return x.Start
	}
	return nil
}

func (x *BidiRunRequest) GetStart1() *BidiRunRequest_Start1 {
	if x, ok := x.GetRequest().(*BidiRunRequest_Start1_); ok {
		return x.Start1
	}
	return nil
}

func (x *BidiRunRequest) GetCall() *BidiRunCall {
	if x, ok := x.GetRequest().(*BidiRunRequest_Call_); ok {
		return x.Call
	}
	return nil
}

func (x *BidiRunRequest) GetCallReturn() *BidiRunCallReturn {
	if x, ok := x.GetRequest().(*BidiRunRequest_CallReturn); ok {
		return x.CallReturn
	}
	return nil
}

func (x *BidiRunRequest) GetLoadReturn() *BidiRunLoadReturn {
	if x, ok := x.GetRequest().(*BidiRunRequest_LoadReturn); ok {
		return x.LoadReturn
	}
	return nil
}

func (x *BidiRunRequest) GetNewRunIdValue() *BidiRunRequest_NewRunIDValue {
	if x, ok := x.GetRequest().(*BidiRunRequest_NewRunIdValue); ok {
		return x.NewRunIdValue
	}
	return nil
}

type isBidiRunRequest_Request interface {
	isBidiRunRequest_Request()
}

type BidiRunRequest_Start_ struct {
	Start *BidiRunRequest_Start `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type BidiRunRequest_Start1_ struct {
	Start1 *BidiRunRequest_Start1 `protobuf:"bytes,2,opt,name=start1,proto3,oneof"`
}

type BidiRunRequest_Call_ struct {
	Call *BidiRunCall `protobuf:"bytes,3,opt,name=call,proto3,oneof"`
}

type BidiRunRequest_CallReturn struct {
	CallReturn *BidiRunCallReturn `protobuf:"bytes,4,opt,name=call_return,json=callReturn,proto3,oneof"`
}

type BidiRunRequest_LoadReturn struct {
	LoadReturn *BidiRunLoadReturn `protobuf:"bytes,5,opt,name=load_return,json=loadReturn,proto3,oneof"`
}

type BidiRunRequest_NewRunIdValue struct {
	NewRunIdValue *BidiRunRequest_NewRunIDValue `protobuf:"bytes,6,opt,name=new_run_id_value,json=newRunIdValue,proto3,oneof"`
}

func (*BidiRunRequest_Start_) isBidiRunRequest_Request() {}

func (*BidiRunRequest_Start1_) isBidiRunRequest_Request() {}

func (*BidiRunRequest_Call_) isBidiRunRequest_Request() {}

func (*BidiRunRequest_CallReturn) isBidiRunRequest_Request() {}

func (*BidiRunRequest_LoadReturn) isBidiRunRequest_Request() {}

func (*BidiRunRequest_NewRunIdValue) isBidiRunRequest_Request() {}

type BidiRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*BidiRunResponse_Print_
	//	*BidiRunResponse_Call
	//	*BidiRunResponse_CallReturn
	//	*BidiRunResponse_Load_
	//	*BidiRunResponse_StartReturn
	//	*BidiRunResponse_NewRunId
	Response isBidiRunResponse_Response `protobuf_oneof:"response"`
}

func (x *BidiRunResponse) Reset() {
	*x = BidiRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunResponse) ProtoMessage() {}

func (x *BidiRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunResponse.ProtoReflect.Descriptor instead.
func (*BidiRunResponse) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{14}
}

func (m *BidiRunResponse) GetResponse() isBidiRunResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BidiRunResponse) GetPrint() *BidiRunResponse_Print {
	if x, ok := x.GetResponse().(*BidiRunResponse_Print_); ok {
		return x.Print
	}
	return nil
}

func (x *BidiRunResponse) GetCall() *BidiRunCall {
	if x, ok := x.GetResponse().(*BidiRunResponse_Call); ok {
		return x.Call
	}
	return nil
}

func (x *BidiRunResponse) GetCallReturn() *BidiRunCallReturn {
	if x, ok := x.GetResponse().(*BidiRunResponse_CallReturn); ok {
		return x.CallReturn
	}
	return nil
}

func (x *BidiRunResponse) GetLoad() *BidiRunResponse_Load {
	if x, ok := x.GetResponse().(*BidiRunResponse_Load_); ok {
		return x.Load
	}
	return nil
}

func (x *BidiRunResponse) GetStartReturn() *BidiRunLoadReturn {
	if x, ok := x.GetResponse().(*BidiRunResponse_StartReturn); ok {
		return x.StartReturn
	}
	return nil
}

func (x *BidiRunResponse) GetNewRunId() *BidiRunResponse_NewRunID {
	if x, ok := x.GetResponse().(*BidiRunResponse_NewRunId); ok {
		return x.NewRunId
	}
	return nil
}

type isBidiRunResponse_Response interface {
	isBidiRunResponse_Response()
}

type BidiRunResponse_Print_ struct {
	Print *BidiRunResponse_Print `protobuf:"bytes,1,opt,name=print,proto3,oneof"`
}

type BidiRunResponse_Call struct {
	Call *BidiRunCall `protobuf:"bytes,2,opt,name=call,proto3,oneof"`
}

type BidiRunResponse_CallReturn struct {
	CallReturn *BidiRunCallReturn `protobuf:"bytes,3,opt,name=call_return,json=callReturn,proto3,oneof"`
}

type BidiRunResponse_Load_ struct {
	Load *BidiRunResponse_Load `protobuf:"bytes,4,opt,name=load,proto3,oneof"`
}

type BidiRunResponse_StartReturn struct {
	StartReturn *BidiRunLoadReturn `protobuf:"bytes,5,opt,name=start_return,json=startReturn,proto3,oneof"` // response to start.
}

type BidiRunResponse_NewRunId struct {
	NewRunId *BidiRunResponse_NewRunID `protobuf:"bytes,6,opt,name=new_run_id,json=newRunId,proto3,oneof"`
}

func (*BidiRunResponse_Print_) isBidiRunResponse_Response() {}

func (*BidiRunResponse_Call) isBidiRunResponse_Response() {}

func (*BidiRunResponse_CallReturn) isBidiRunResponse_Response() {}

func (*BidiRunResponse_Load_) isBidiRunResponse_Response() {}

func (*BidiRunResponse_StartReturn) isBidiRunResponse_Response() {}

func (*BidiRunResponse_NewRunId) isBidiRunResponse_Response() {}

type BidiRunRequest_StartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunId   string                `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Globals map[string]*v11.Value `protobuf:"bytes,2,rep,name=globals,proto3" json:"globals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Path    string                `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *BidiRunRequest_StartData) Reset() {
	*x = BidiRunRequest_StartData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunRequest_StartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunRequest_StartData) ProtoMessage() {}

func (x *BidiRunRequest_StartData) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunRequest_StartData.ProtoReflect.Descriptor instead.
func (*BidiRunRequest_StartData) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{13, 0}
}

func (x *BidiRunRequest_StartData) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *BidiRunRequest_StartData) GetGlobals() map[string]*v11.Value {
	if x != nil {
		return x.Globals
	}
	return nil
}

func (x *BidiRunRequest_StartData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type BidiRunRequest_Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildFile []byte                    `protobuf:"bytes,1,opt,name=build_file,json=buildFile,proto3" json:"build_file,omitempty"`
	Data      *BidiRunRequest_StartData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BidiRunRequest_Start) Reset() {
	*x = BidiRunRequest_Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunRequest_Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunRequest_Start) ProtoMessage() {}

func (x *BidiRunRequest_Start) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunRequest_Start.ProtoReflect.Descriptor instead.
func (*BidiRunRequest_Start) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{13, 1}
}

func (x *BidiRunRequest_Start) GetBuildFile() []byte {
	if x != nil {
		return x.BuildFile
	}
	return nil
}

func (x *BidiRunRequest_Start) GetData() *BidiRunRequest_StartData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BidiRunRequest_Start1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeName string                    `protobuf:"bytes,1,opt,name=runtime_name,json=runtimeName,proto3" json:"runtime_name,omitempty"`
	Artifact    *Artifact                 `protobuf:"bytes,2,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Data        *BidiRunRequest_StartData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BidiRunRequest_Start1) Reset() {
	*x = BidiRunRequest_Start1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunRequest_Start1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunRequest_Start1) ProtoMessage() {}

func (x *BidiRunRequest_Start1) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunRequest_Start1.ProtoReflect.Descriptor instead.
func (*BidiRunRequest_Start1) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{13, 2}
}

func (x *BidiRunRequest_Start1) GetRuntimeName() string {
	if x != nil {
		return x.RuntimeName
	}
	return ""
}

func (x *BidiRunRequest_Start1) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *BidiRunRequest_Start1) GetData() *BidiRunRequest_StartData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BidiRunRequest_Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  *v11.Value            `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Args   []*v11.Value          `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Kwargs map[string]*v11.Value `protobuf:"bytes,4,rep,name=kwargs,proto3" json:"kwargs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BidiRunRequest_Call) Reset() {
	*x = BidiRunRequest_Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunRequest_Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunRequest_Call) ProtoMessage() {}

func (x *BidiRunRequest_Call) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunRequest_Call.ProtoReflect.Descriptor instead.
func (*BidiRunRequest_Call) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{13, 3}
}

func (x *BidiRunRequest_Call) GetValue() *v11.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BidiRunRequest_Call) GetArgs() []*v11.Value {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *BidiRunRequest_Call) GetKwargs() map[string]*v11.Value {
	if x != nil {
		return x.Kwargs
	}
	return nil
}

type BidiRunRequest_NewRunIDValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunId string `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
}

func (x *BidiRunRequest_NewRunIDValue) Reset() {
	*x = BidiRunRequest_NewRunIDValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunRequest_NewRunIDValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunRequest_NewRunIDValue) ProtoMessage() {}

func (x *BidiRunRequest_NewRunIDValue) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunRequest_NewRunIDValue.ProtoReflect.Descriptor instead.
func (*BidiRunRequest_NewRunIDValue) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{13, 4}
}

func (x *BidiRunRequest_NewRunIDValue) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type BidiRunResponse_Print struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *BidiRunResponse_Print) Reset() {
	*x = BidiRunResponse_Print{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunResponse_Print) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunResponse_Print) ProtoMessage() {}

func (x *BidiRunResponse_Print) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunResponse_Print.ProtoReflect.Descriptor instead.
func (*BidiRunResponse_Print) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{14, 0}
}

func (x *BidiRunResponse_Print) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type BidiRunResponse_Load struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *BidiRunResponse_Load) Reset() {
	*x = BidiRunResponse_Load{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunResponse_Load) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunResponse_Load) ProtoMessage() {}

func (x *BidiRunResponse_Load) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunResponse_Load.ProtoReflect.Descriptor instead.
func (*BidiRunResponse_Load) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{14, 1}
}

func (x *BidiRunResponse_Load) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type BidiRunResponse_NewRunID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BidiRunResponse_NewRunID) Reset() {
	*x = BidiRunResponse_NewRunID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidiRunResponse_NewRunID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidiRunResponse_NewRunID) ProtoMessage() {}

func (x *BidiRunResponse_NewRunID) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_runtimes_v1_svc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidiRunResponse_NewRunID.ProtoReflect.Descriptor instead.
func (*BidiRunResponse_NewRunID) Descriptor() ([]byte, []int) {
	return file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP(), []int{14, 2}
}

var File_autokitteh_runtimes_v1_svc_proto protoreflect.FileDescriptor

var file_autokitteh_runtimes_v1_svc_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x23, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x0f, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x10, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x07, 0xfa, 0xf7, 0x18,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xc5,
	0x02, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0xf7, 0x18, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x65, 0x6d, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x1a,
	0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a,
	0x09, 0x4d, 0x65, 0x6d, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x62, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x95, 0x02, 0x0a, 0x0d, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0d, 0xfa, 0xf7, 0x18, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0xf7, 0x18, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x95, 0x02, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x5d, 0x0a, 0x07, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x12, 0xfa, 0xf7, 0x18, 0x0e, 0x9a,
	0x01, 0x0b, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x1a, 0x57, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xf8, 0x01, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0x56, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb4, 0x02, 0x0a, 0x0b, 0x42,
	0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0xfa, 0xf7, 0x18, 0x08, 0x92, 0x01,
	0x05, 0x22, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x5b, 0x0a, 0x06,
	0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x2e, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x12, 0xfa,
	0xf7, 0x18, 0x0e, 0x9a, 0x01, 0x0b, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x06, 0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x56, 0x0a, 0x0b, 0x4b, 0x77, 0x61,
	0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x82, 0x02, 0x0a,
	0x11, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x61, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69,
	0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x12, 0xfa, 0xf7, 0x18, 0x0e, 0x9a,
	0x01, 0x0b, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x56, 0x0a, 0x0b, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9a, 0x0b, 0x0a, 0x0e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64,
	0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x31, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x31, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52,
	0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x4c,
	0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64,
	0x69, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x4c, 0x0a, 0x0b,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52,
	0x75, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0a,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x5f, 0x0a, 0x10, 0x6e, 0x65,
	0x77, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x77,
	0x52, 0x75, 0x6e, 0x49, 0x44, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x65,
	0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x86, 0x02, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x75, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x07, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x12, 0xfa, 0xf7, 0x18, 0x0e,
	0x9a, 0x01, 0x0b, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x57, 0x0a, 0x0c, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x75, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0xfa, 0xf7,
	0x18, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xcb, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x31, 0x12, 0x2b, 0x0a, 0x0c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7,
	0x18, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xb5, 0x02, 0x0a, 0x04, 0x43, 0x61,
	0x6c, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x0c, 0xfa, 0xf7, 0x18, 0x08, 0x92, 0x01, 0x05, 0x22, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x12, 0x63, 0x0a, 0x06, 0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x2e, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x12, 0xfa,
	0xf7, 0x18, 0x0e, 0x9a, 0x01, 0x0b, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x06, 0x6b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x1a, 0x56, 0x0a, 0x0b, 0x4b, 0x77, 0x61,
	0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x30, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0xf7, 0x18, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x72, 0x75,
	0x6e, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x98,
	0x04, 0x0a, 0x0f, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x61, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x12, 0x4c, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x42, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x48, 0x00,
	0x52, 0x04, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x50, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x48, 0x00, 0x52, 0x08,
	0x6e, 0x65, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x1a, 0x1b, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x1a, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa4, 0x04, 0x0a, 0x0f, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x22, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x5e, 0x0a, 0x07, 0x42, 0x69, 0x64, 0x69, 0x52,
	0x75, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x06, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x31, 0x12, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0xed, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x74, 0x65, 0x68, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42,
	0x08, 0x53, 0x76, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x6f, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x61,
	0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x52, 0x58, 0xaa, 0x02,
	0x16, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x22, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x5c, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x3a, 0x3a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_autokitteh_runtimes_v1_svc_proto_rawDescOnce sync.Once
	file_autokitteh_runtimes_v1_svc_proto_rawDescData = file_autokitteh_runtimes_v1_svc_proto_rawDesc
)

func file_autokitteh_runtimes_v1_svc_proto_rawDescGZIP() []byte {
	file_autokitteh_runtimes_v1_svc_proto_rawDescOnce.Do(func() {
		file_autokitteh_runtimes_v1_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_autokitteh_runtimes_v1_svc_proto_rawDescData)
	})
	return file_autokitteh_runtimes_v1_svc_proto_rawDescData
}

var file_autokitteh_runtimes_v1_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_autokitteh_runtimes_v1_svc_proto_goTypes = []interface{}{
	(*DescribeRequest)(nil),              // 0: autokitteh.runtimes.v1.DescribeRequest
	(*DescribeResponse)(nil),             // 1: autokitteh.runtimes.v1.DescribeResponse
	(*ListRequest)(nil),                  // 2: autokitteh.runtimes.v1.ListRequest
	(*ListResponse)(nil),                 // 3: autokitteh.runtimes.v1.ListResponse
	(*BuildRequest)(nil),                 // 4: autokitteh.runtimes.v1.BuildRequest
	(*BuildResponse)(nil),                // 5: autokitteh.runtimes.v1.BuildResponse
	(*Build1Request)(nil),                // 6: autokitteh.runtimes.v1.Build1Request
	(*Build1Response)(nil),               // 7: autokitteh.runtimes.v1.Build1Response
	(*RunRequest)(nil),                   // 8: autokitteh.runtimes.v1.RunRequest
	(*RunResponse)(nil),                  // 9: autokitteh.runtimes.v1.RunResponse
	(*BidiRunCall)(nil),                  // 10: autokitteh.runtimes.v1.BidiRunCall
	(*BidiRunCallReturn)(nil),            // 11: autokitteh.runtimes.v1.BidiRunCallReturn
	(*BidiRunLoadReturn)(nil),            // 12: autokitteh.runtimes.v1.BidiRunLoadReturn
	(*BidiRunRequest)(nil),               // 13: autokitteh.runtimes.v1.BidiRunRequest
	(*BidiRunResponse)(nil),              // 14: autokitteh.runtimes.v1.BidiRunResponse
	nil,                                  // 15: autokitteh.runtimes.v1.BuildRequest.ResourcesEntry
	nil,                                  // 16: autokitteh.runtimes.v1.BuildRequest.MemoEntry
	nil,                                  // 17: autokitteh.runtimes.v1.Build1Request.ResourcesEntry
	nil,                                  // 18: autokitteh.runtimes.v1.RunRequest.GlobalsEntry
	nil,                                  // 19: autokitteh.runtimes.v1.RunResponse.ResultEntry
	nil,                                  // 20: autokitteh.runtimes.v1.BidiRunCall.KwargsEntry
	nil,                                  // 21: autokitteh.runtimes.v1.BidiRunLoadReturn.ValuesEntry
	(*BidiRunRequest_StartData)(nil),     // 22: autokitteh.runtimes.v1.BidiRunRequest.StartData
	(*BidiRunRequest_Start)(nil),         // 23: autokitteh.runtimes.v1.BidiRunRequest.Start
	(*BidiRunRequest_Start1)(nil),        // 24: autokitteh.runtimes.v1.BidiRunRequest.Start1
	(*BidiRunRequest_Call)(nil),          // 25: autokitteh.runtimes.v1.BidiRunRequest.Call
	(*BidiRunRequest_NewRunIDValue)(nil), // 26: autokitteh.runtimes.v1.BidiRunRequest.NewRunIDValue
	nil,                                  // 27: autokitteh.runtimes.v1.BidiRunRequest.StartData.GlobalsEntry
	nil,                                  // 28: autokitteh.runtimes.v1.BidiRunRequest.Call.KwargsEntry
	(*BidiRunResponse_Print)(nil),        // 29: autokitteh.runtimes.v1.BidiRunResponse.Print
	(*BidiRunResponse_Load)(nil),         // 30: autokitteh.runtimes.v1.BidiRunResponse.Load
	(*BidiRunResponse_NewRunID)(nil),     // 31: autokitteh.runtimes.v1.BidiRunResponse.NewRunID
	(*Runtime)(nil),                      // 32: autokitteh.runtimes.v1.Runtime
	(*v1.Error)(nil),                     // 33: autokitteh.program.v1.Error
	(*Artifact)(nil),                     // 34: autokitteh.runtimes.v1.Artifact
	(*v11.Value)(nil),                    // 35: autokitteh.values.v1.Value
}
var file_autokitteh_runtimes_v1_svc_proto_depIdxs = []int32{
	32, // 0: autokitteh.runtimes.v1.DescribeResponse.runtime:type_name -> autokitteh.runtimes.v1.Runtime
	32, // 1: autokitteh.runtimes.v1.ListResponse.runtimes:type_name -> autokitteh.runtimes.v1.Runtime
	15, // 2: autokitteh.runtimes.v1.BuildRequest.resources:type_name -> autokitteh.runtimes.v1.BuildRequest.ResourcesEntry
	16, // 3: autokitteh.runtimes.v1.BuildRequest.memo:type_name -> autokitteh.runtimes.v1.BuildRequest.MemoEntry
	33, // 4: autokitteh.runtimes.v1.BuildResponse.error:type_name -> autokitteh.program.v1.Error
	17, // 5: autokitteh.runtimes.v1.Build1Request.resources:type_name -> autokitteh.runtimes.v1.Build1Request.ResourcesEntry
	34, // 6: autokitteh.runtimes.v1.Build1Response.artifact:type_name -> autokitteh.runtimes.v1.Artifact
	33, // 7: autokitteh.runtimes.v1.Build1Response.error:type_name -> autokitteh.program.v1.Error
	18, // 8: autokitteh.runtimes.v1.RunRequest.globals:type_name -> autokitteh.runtimes.v1.RunRequest.GlobalsEntry
	33, // 9: autokitteh.runtimes.v1.RunResponse.error:type_name -> autokitteh.program.v1.Error
	19, // 10: autokitteh.runtimes.v1.RunResponse.result:type_name -> autokitteh.runtimes.v1.RunResponse.ResultEntry
	35, // 11: autokitteh.runtimes.v1.BidiRunCall.value:type_name -> autokitteh.values.v1.Value
	35, // 12: autokitteh.runtimes.v1.BidiRunCall.args:type_name -> autokitteh.values.v1.Value
	20, // 13: autokitteh.runtimes.v1.BidiRunCall.kwargs:type_name -> autokitteh.runtimes.v1.BidiRunCall.KwargsEntry
	35, // 14: autokitteh.runtimes.v1.BidiRunCallReturn.value:type_name -> autokitteh.values.v1.Value
	33, // 15: autokitteh.runtimes.v1.BidiRunCallReturn.error:type_name -> autokitteh.program.v1.Error
	21, // 16: autokitteh.runtimes.v1.BidiRunLoadReturn.values:type_name -> autokitteh.runtimes.v1.BidiRunLoadReturn.ValuesEntry
	33, // 17: autokitteh.runtimes.v1.BidiRunLoadReturn.error:type_name -> autokitteh.program.v1.Error
	23, // 18: autokitteh.runtimes.v1.BidiRunRequest.start:type_name -> autokitteh.runtimes.v1.BidiRunRequest.Start
	24, // 19: autokitteh.runtimes.v1.BidiRunRequest.start1:type_name -> autokitteh.runtimes.v1.BidiRunRequest.Start1
	10, // 20: autokitteh.runtimes.v1.BidiRunRequest.call:type_name -> autokitteh.runtimes.v1.BidiRunCall
	11, // 21: autokitteh.runtimes.v1.BidiRunRequest.call_return:type_name -> autokitteh.runtimes.v1.BidiRunCallReturn
	12, // 22: autokitteh.runtimes.v1.BidiRunRequest.load_return:type_name -> autokitteh.runtimes.v1.BidiRunLoadReturn
	26, // 23: autokitteh.runtimes.v1.BidiRunRequest.new_run_id_value:type_name -> autokitteh.runtimes.v1.BidiRunRequest.NewRunIDValue
	29, // 24: autokitteh.runtimes.v1.BidiRunResponse.print:type_name -> autokitteh.runtimes.v1.BidiRunResponse.Print
	10, // 25: autokitteh.runtimes.v1.BidiRunResponse.call:type_name -> autokitteh.runtimes.v1.BidiRunCall
	11, // 26: autokitteh.runtimes.v1.BidiRunResponse.call_return:type_name -> autokitteh.runtimes.v1.BidiRunCallReturn
	30, // 27: autokitteh.runtimes.v1.BidiRunResponse.load:type_name -> autokitteh.runtimes.v1.BidiRunResponse.Load
	12, // 28: autokitteh.runtimes.v1.BidiRunResponse.start_return:type_name -> autokitteh.runtimes.v1.BidiRunLoadReturn
	31, // 29: autokitteh.runtimes.v1.BidiRunResponse.new_run_id:type_name -> autokitteh.runtimes.v1.BidiRunResponse.NewRunID
	35, // 30: autokitteh.runtimes.v1.RunRequest.GlobalsEntry.value:type_name -> autokitteh.values.v1.Value
	35, // 31: autokitteh.runtimes.v1.RunResponse.ResultEntry.value:type_name -> autokitteh.values.v1.Value
	35, // 32: autokitteh.runtimes.v1.BidiRunCall.KwargsEntry.value:type_name -> autokitteh.values.v1.Value
	35, // 33: autokitteh.runtimes.v1.BidiRunLoadReturn.ValuesEntry.value:type_name -> autokitteh.values.v1.Value
	27, // 34: autokitteh.runtimes.v1.BidiRunRequest.StartData.globals:type_name -> autokitteh.runtimes.v1.BidiRunRequest.StartData.GlobalsEntry
	22, // 35: autokitteh.runtimes.v1.BidiRunRequest.Start.data:type_name -> autokitteh.runtimes.v1.BidiRunRequest.StartData
	34, // 36: autokitteh.runtimes.v1.BidiRunRequest.Start1.artifact:type_name -> autokitteh.runtimes.v1.Artifact
	22, // 37: autokitteh.runtimes.v1.BidiRunRequest.Start1.data:type_name -> autokitteh.runtimes.v1.BidiRunRequest.StartData
	35, // 38: autokitteh.runtimes.v1.BidiRunRequest.Call.value:type_name -> autokitteh.values.v1.Value
	35, // 39: autokitteh.runtimes.v1.BidiRunRequest.Call.args:type_name -> autokitteh.values.v1.Value
	28, // 40: autokitteh.runtimes.v1.BidiRunRequest.Call.kwargs:type_name -> autokitteh.runtimes.v1.BidiRunRequest.Call.KwargsEntry
	35, // 41: autokitteh.runtimes.v1.BidiRunRequest.StartData.GlobalsEntry.value:type_name -> autokitteh.values.v1.Value
	35, // 42: autokitteh.runtimes.v1.BidiRunRequest.Call.KwargsEntry.value:type_name -> autokitteh.values.v1.Value
	0,  // 43: autokitteh.runtimes.v1.RuntimesService.Describe:input_type -> autokitteh.runtimes.v1.DescribeRequest
	2,  // 44: autokitteh.runtimes.v1.RuntimesService.List:input_type -> autokitteh.runtimes.v1.ListRequest
	4,  // 45: autokitteh.runtimes.v1.RuntimesService.Build:input_type -> autokitteh.runtimes.v1.BuildRequest
	8,  // 46: autokitteh.runtimes.v1.RuntimesService.Run:input_type -> autokitteh.runtimes.v1.RunRequest
	13, // 47: autokitteh.runtimes.v1.RuntimesService.BidiRun:input_type -> autokitteh.runtimes.v1.BidiRunRequest
	6,  // 48: autokitteh.runtimes.v1.RuntimesService.Build1:input_type -> autokitteh.runtimes.v1.Build1Request
	1,  // 49: autokitteh.runtimes.v1.RuntimesService.Describe:output_type -> autokitteh.runtimes.v1.DescribeResponse
	3,  // 50: autokitteh.runtimes.v1.RuntimesService.List:output_type -> autokitteh.runtimes.v1.ListResponse
	5,  // 51: autokitteh.runtimes.v1.RuntimesService.Build:output_type -> autokitteh.runtimes.v1.BuildResponse
	9,  // 52: autokitteh.runtimes.v1.RuntimesService.Run:output_type -> autokitteh.runtimes.v1.RunResponse
	14, // 53: autokitteh.runtimes.v1.RuntimesService.BidiRun:output_type -> autokitteh.runtimes.v1.BidiRunResponse
	7,  // 54: autokitteh.runtimes.v1.RuntimesService.Build1:output_type -> autokitteh.runtimes.v1.Build1Response
	49, // [49:55] is the sub-list for method output_type
	43, // [43:49] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_autokitteh_runtimes_v1_svc_proto_init() }
func file_autokitteh_runtimes_v1_svc_proto_init() {
	if File_autokitteh_runtimes_v1_svc_proto != nil {
		return
	}
	file_autokitteh_runtimes_v1_build_proto_init()
	file_autokitteh_runtimes_v1_runtime_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Build1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Build1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunCallReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunLoadReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunRequest_StartData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunRequest_Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunRequest_Start1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunRequest_Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunRequest_NewRunIDValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunResponse_Print); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunResponse_Load); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autokitteh_runtimes_v1_svc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidiRunResponse_NewRunID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_autokitteh_runtimes_v1_svc_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*BidiRunCallReturn_Value)(nil),
		(*BidiRunCallReturn_Error)(nil),
	}
	file_autokitteh_runtimes_v1_svc_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*BidiRunRequest_Start_)(nil),
		(*BidiRunRequest_Start1_)(nil),
		(*BidiRunRequest_Call_)(nil),
		(*BidiRunRequest_CallReturn)(nil),
		(*BidiRunRequest_LoadReturn)(nil),
		(*BidiRunRequest_NewRunIdValue)(nil),
	}
	file_autokitteh_runtimes_v1_svc_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*BidiRunResponse_Print_)(nil),
		(*BidiRunResponse_Call)(nil),
		(*BidiRunResponse_CallReturn)(nil),
		(*BidiRunResponse_Load_)(nil),
		(*BidiRunResponse_StartReturn)(nil),
		(*BidiRunResponse_NewRunId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_autokitteh_runtimes_v1_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_autokitteh_runtimes_v1_svc_proto_goTypes,
		DependencyIndexes: file_autokitteh_runtimes_v1_svc_proto_depIdxs,
		MessageInfos:      file_autokitteh_runtimes_v1_svc_proto_msgTypes,
	}.Build()
	File_autokitteh_runtimes_v1_svc_proto = out.File
	file_autokitteh_runtimes_v1_svc_proto_rawDesc = nil
	file_autokitteh_runtimes_v1_svc_proto_goTypes = nil
	file_autokitteh_runtimes_v1_svc_proto_depIdxs = nil
}
