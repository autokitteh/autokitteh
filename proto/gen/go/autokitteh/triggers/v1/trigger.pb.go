// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: autokitteh/triggers/v1/trigger.proto

package triggersv1

import (
	v1 "go.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/program/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Trigger_SourceType int32

const (
	Trigger_SOURCE_TYPE_UNSPECIFIED Trigger_SourceType = 0
	Trigger_SOURCE_TYPE_CONNECTION  Trigger_SourceType = 1
	Trigger_SOURCE_TYPE_WEBHOOK     Trigger_SourceType = 2
	Trigger_SOURCE_TYPE_SCHEDULE    Trigger_SourceType = 3
)

// Enum value maps for Trigger_SourceType.
var (
	Trigger_SourceType_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "SOURCE_TYPE_CONNECTION",
		2: "SOURCE_TYPE_WEBHOOK",
		3: "SOURCE_TYPE_SCHEDULE",
	}
	Trigger_SourceType_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"SOURCE_TYPE_CONNECTION":  1,
		"SOURCE_TYPE_WEBHOOK":     2,
		"SOURCE_TYPE_SCHEDULE":    3,
	}
)

func (x Trigger_SourceType) Enum() *Trigger_SourceType {
	p := new(Trigger_SourceType)
	*p = x
	return p
}

func (x Trigger_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trigger_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_autokitteh_triggers_v1_trigger_proto_enumTypes[0].Descriptor()
}

func (Trigger_SourceType) Type() protoreflect.EnumType {
	return &file_autokitteh_triggers_v1_trigger_proto_enumTypes[0]
}

func (x Trigger_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trigger_SourceType.Descriptor instead.
func (Trigger_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_autokitteh_triggers_v1_trigger_proto_rawDescGZIP(), []int{0, 0}
}

type Trigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TriggerId    string             `protobuf:"bytes,1,opt,name=trigger_id,json=triggerId,proto3" json:"trigger_id,omitempty"`
	Name         string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SourceType   Trigger_SourceType `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3,enum=autokitteh.triggers.v1.Trigger_SourceType" json:"source_type,omitempty"`
	ProjectId    string             `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EventType    string             `protobuf:"bytes,5,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	CodeLocation *v1.CodeLocation   `protobuf:"bytes,6,opt,name=code_location,json=codeLocation,proto3" json:"code_location,omitempty"`
	Filter       string             `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	ConnectionId string             `protobuf:"bytes,50,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"` // if source_type == CONNECTION.
	Schedule     string             `protobuf:"bytes,51,opt,name=schedule,proto3" json:"schedule,omitempty"`                             // if source_type == SCHEDULE.
	// read only.
	WebhookSlug string `protobuf:"bytes,100,opt,name=webhook_slug,json=webhookSlug,proto3" json:"webhook_slug,omitempty"` // if source_type == WEBHOOK, after creation.
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autokitteh_triggers_v1_trigger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_autokitteh_triggers_v1_trigger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_autokitteh_triggers_v1_trigger_proto_rawDescGZIP(), []int{0}
}

func (x *Trigger) GetTriggerId() string {
	if x != nil {
		return x.TriggerId
	}
	return ""
}

func (x *Trigger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Trigger) GetSourceType() Trigger_SourceType {
	if x != nil {
		return x.SourceType
	}
	return Trigger_SOURCE_TYPE_UNSPECIFIED
}

func (x *Trigger) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Trigger) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Trigger) GetCodeLocation() *v1.CodeLocation {
	if x != nil {
		return x.CodeLocation
	}
	return nil
}

func (x *Trigger) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *Trigger) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *Trigger) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *Trigger) GetWebhookSlug() string {
	if x != nil {
		return x.WebhookSlug
	}
	return ""
}

var File_autokitteh_triggers_v1_trigger_proto protoreflect.FileDescriptor

var file_autokitteh_triggers_v1_trigger_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x23,
	0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x87, 0x04, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69,
	0x74, 0x74, 0x65, 0x68, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a,
	0x0d, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x53,
	0x6c, 0x75, 0x67, 0x22, 0x78, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x42, 0x48, 0x4f, 0x4f,
	0x4b, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x03, 0x42, 0xf1, 0x01,
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68,
	0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x64, 0x65, 0x76, 0x2f,
	0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74,
	0x65, 0x68, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x54, 0x58, 0xaa,
	0x02, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x2e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x41, 0x75, 0x74, 0x6f, 0x6b,
	0x69, 0x74, 0x74, 0x65, 0x68, 0x5c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x22, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x74, 0x65, 0x68, 0x5c, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x41, 0x75, 0x74, 0x6f, 0x6b, 0x69, 0x74,
	0x74, 0x65, 0x68, 0x3a, 0x3a, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_autokitteh_triggers_v1_trigger_proto_rawDescOnce sync.Once
	file_autokitteh_triggers_v1_trigger_proto_rawDescData = file_autokitteh_triggers_v1_trigger_proto_rawDesc
)

func file_autokitteh_triggers_v1_trigger_proto_rawDescGZIP() []byte {
	file_autokitteh_triggers_v1_trigger_proto_rawDescOnce.Do(func() {
		file_autokitteh_triggers_v1_trigger_proto_rawDescData = protoimpl.X.CompressGZIP(file_autokitteh_triggers_v1_trigger_proto_rawDescData)
	})
	return file_autokitteh_triggers_v1_trigger_proto_rawDescData
}

var file_autokitteh_triggers_v1_trigger_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_autokitteh_triggers_v1_trigger_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_autokitteh_triggers_v1_trigger_proto_goTypes = []interface{}{
	(Trigger_SourceType)(0), // 0: autokitteh.triggers.v1.Trigger.SourceType
	(*Trigger)(nil),         // 1: autokitteh.triggers.v1.Trigger
	(*v1.CodeLocation)(nil), // 2: autokitteh.program.v1.CodeLocation
}
var file_autokitteh_triggers_v1_trigger_proto_depIdxs = []int32{
	0, // 0: autokitteh.triggers.v1.Trigger.source_type:type_name -> autokitteh.triggers.v1.Trigger.SourceType
	2, // 1: autokitteh.triggers.v1.Trigger.code_location:type_name -> autokitteh.program.v1.CodeLocation
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_autokitteh_triggers_v1_trigger_proto_init() }
func file_autokitteh_triggers_v1_trigger_proto_init() {
	if File_autokitteh_triggers_v1_trigger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_autokitteh_triggers_v1_trigger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_autokitteh_triggers_v1_trigger_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_autokitteh_triggers_v1_trigger_proto_goTypes,
		DependencyIndexes: file_autokitteh_triggers_v1_trigger_proto_depIdxs,
		EnumInfos:         file_autokitteh_triggers_v1_trigger_proto_enumTypes,
		MessageInfos:      file_autokitteh_triggers_v1_trigger_proto_msgTypes,
	}.Build()
	File_autokitteh_triggers_v1_trigger_proto = out.File
	file_autokitteh_triggers_v1_trigger_proto_rawDesc = nil
	file_autokitteh_triggers_v1_trigger_proto_goTypes = nil
	file_autokitteh_triggers_v1_trigger_proto_depIdxs = nil
}
