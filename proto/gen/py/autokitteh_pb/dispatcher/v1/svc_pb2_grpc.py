# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from autokitteh_pb.dispatcher.v1 import svc_pb2 as autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2


class DispatcherServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Dispatch = channel.unary_unary(
                '/autokitteh.dispatcher.v1.DispatcherService/Dispatch',
                request_serializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.DispatchRequest.SerializeToString,
                response_deserializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.DispatchResponse.FromString,
                )
        self.Redispatch = channel.unary_unary(
                '/autokitteh.dispatcher.v1.DispatcherService/Redispatch',
                request_serializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.RedispatchRequest.SerializeToString,
                response_deserializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.RedispatchResponse.FromString,
                )


class DispatcherServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Dispatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Redispatch(self, request, context):
        """Does not creates the event, just resends an existing one.
        This method also duplicates the event, and generates a new
        event ID for it. The new event ID is returned in the response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DispatcherServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Dispatch': grpc.unary_unary_rpc_method_handler(
                    servicer.Dispatch,
                    request_deserializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.DispatchRequest.FromString,
                    response_serializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.DispatchResponse.SerializeToString,
            ),
            'Redispatch': grpc.unary_unary_rpc_method_handler(
                    servicer.Redispatch,
                    request_deserializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.RedispatchRequest.FromString,
                    response_serializer=autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.RedispatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'autokitteh.dispatcher.v1.DispatcherService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DispatcherService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Dispatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.dispatcher.v1.DispatcherService/Dispatch',
            autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.DispatchRequest.SerializeToString,
            autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.DispatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Redispatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/autokitteh.dispatcher.v1.DispatcherService/Redispatch',
            autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.RedispatchRequest.SerializeToString,
            autokitteh_dot_dispatcher_dot_v1_dot_svc__pb2.RedispatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
