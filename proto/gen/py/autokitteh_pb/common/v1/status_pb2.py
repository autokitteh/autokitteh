# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: autokitteh/common/v1/status.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!autokitteh/common/v1/status.proto\x12\x14\x61utokitteh.common.v1\"\xa6\x01\n\x06Status\x12\x35\n\x04\x63ode\x18\x01 \x01(\x0e\x32!.autokitteh.common.v1.Status.CodeR\x04\x63ode\x12\x18\n\x07message\x18\x02 \x01(\tR\x07message\"K\n\x04\x43ode\x12\x14\n\x10\x43ODE_UNSPECIFIED\x10\x00\x12\x0b\n\x07\x43ODE_OK\x10\x01\x12\x10\n\x0c\x43ODE_WARNING\x10\x02\x12\x0e\n\nCODE_ERROR\x10\x03\x42\xe2\x01\n\x18\x63om.autokitteh.common.v1B\x0bStatusProtoP\x01ZGgo.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/common/v1;commonv1\xa2\x02\x03\x41\x43X\xaa\x02\x14\x41utokitteh.Common.V1\xca\x02\x14\x41utokitteh\\Common\\V1\xe2\x02 Autokitteh\\Common\\V1\\GPBMetadata\xea\x02\x16\x41utokitteh::Common::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'autokitteh.common.v1.status_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030com.autokitteh.common.v1B\013StatusProtoP\001ZGgo.autokitteh.dev/autokitteh/proto/gen/go/autokitteh/common/v1;commonv1\242\002\003ACX\252\002\024Autokitteh.Common.V1\312\002\024Autokitteh\\Common\\V1\342\002 Autokitteh\\Common\\V1\\GPBMetadata\352\002\026Autokitteh::Common::V1'
  _globals['_STATUS']._serialized_start=60
  _globals['_STATUS']._serialized_end=226
  _globals['_STATUS_CODE']._serialized_start=151
  _globals['_STATUS_CODE']._serialized_end=226
# @@protoc_insertion_point(module_scope)
