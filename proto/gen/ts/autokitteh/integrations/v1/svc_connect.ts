// @generated by protoc-gen-connect-es v1.1.4 with parameter "target=ts"
// @generated from file autokitteh/integrations/v1/svc.proto (package autokitteh.integrations.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CallRequest, CallResponse, ConfigureRequest, ConfigureResponse, GetConnectionStatusRequest, GetConnectionStatusResponse, GetRequest, GetResponse, ListRequest, ListResponse, TestConnectionRequest, TestConnectionResponse } from "./svc_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Implemented by integration providers.
 *
 * @generated from service autokitteh.integrations.v1.IntegrationsService
 */
export const IntegrationsService = {
  typeName: "autokitteh.integrations.v1.IntegrationsService",
  methods: {
    /**
     * @generated from rpc autokitteh.integrations.v1.IntegrationsService.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc autokitteh.integrations.v1.IntegrationsService.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get all values for a specific configuration of the integration.
     * The returned values ExecutorIDs will be the integration id.
     *
     * @generated from rpc autokitteh.integrations.v1.IntegrationsService.Configure
     */
    configure: {
      name: "Configure",
      I: ConfigureRequest,
      O: ConfigureResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Actively test the connection to the integration.
     * requires supports_connection_test.
     *
     * @generated from rpc autokitteh.integrations.v1.IntegrationsService.TestConnection
     */
    testConnection: {
      name: "TestConnection",
      I: TestConnectionRequest,
      O: TestConnectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * If connection_id is not provided, will return the status of a new connection as
     * set in `Integration.initial_connection_status`.
     *
     * @generated from rpc autokitteh.integrations.v1.IntegrationsService.GetConnectionStatus
     */
    getConnectionStatus: {
      name: "GetConnectionStatus",
      I: GetConnectionStatusRequest,
      O: GetConnectionStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc autokitteh.integrations.v1.IntegrationsService.Call
     */
    call: {
      name: "Call",
      I: CallRequest,
      O: CallResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

