// @generated by protoc-gen-connect-es v1.1.4 with parameter "target=ts"
// @generated from file autokitteh/oauth/v1/svc.proto (package autokitteh.oauth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ExchangeRequest, ExchangeResponse, GetRequest, GetResponse, StartFlowRequest, StartFlowResponse } from "./svc_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * OAuthService is a generic implementation of 3-legged OAuth 2.0 flows,
 * reusable by OAuth-based integrations and AutoKitteh user authentication.
 * It assumes that the AutoKitteh server has a public address for callbacks,
 * which allows callers of this service not to care about this requirement.
 *
 * @generated from service autokitteh.oauth.v1.OAuthService
 */
export const OAuthService = {
  typeName: "autokitteh.oauth.v1.OAuthService",
  methods: {
    /**
     * @generated from rpc autokitteh.oauth.v1.OAuthService.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc autokitteh.oauth.v1.OAuthService.StartFlow
     */
    startFlow: {
      name: "StartFlow",
      I: StartFlowRequest,
      O: StartFlowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc autokitteh.oauth.v1.OAuthService.Exchange
     */
    exchange: {
      name: "Exchange",
      I: ExchangeRequest,
      O: ExchangeResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

