syntax = "proto3";

package autokitteh.integration_registry.v1;

import "autokitteh/integration_registry/v1/integration.proto";
import "buf/validate/validate.proto";

// Implemented by the autokitteh server.
service IntegrationRegistryService {
  // Register a new integration with the autokitteh server,
  // to enable that server to create connections using it.
  rpc Create(CreateRequest) returns (CreateResponse);

  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc Get(GetRequest) returns (GetResponse);
  rpc List(ListRequest) returns (ListResponse);

  // TBD: Auth key re/generation and invalidation.

  // TBD: health check / telemetry / metrics in the future.
}

message CreateRequest {
  option (buf.validate.message).cel = {
    id: "integration_registry.create.integration_id_must_be_empty"
    message: "integration_id must not be specified"
    expression: "has(this.integration) && this.integration.integration_id == ''"
  };

  integration_registry.v1.Integration integration = 1 [(buf.validate.field).required = true];
}

message CreateResponse {
  string integration_id = 1;
}

message UpdateRequest {
  option (buf.validate.message).cel = {
    id: "integration_registry.update.integration_id_must_not_be_empty"
    message: "integration_id must be non-empty"
    expression: "has(this.integration) && this.integration.integration_id != ''"
  };

  integration_registry.v1.Integration integration = 1 [(buf.validate.field).required = true];
}

message UpdateResponse {}

message DeleteRequest {
  string integration_id = 1 [(buf.validate.field).string.min_len = 1];
}

message DeleteResponse {}

message GetRequest {
  string integration_id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetResponse {
  integration_registry.v1.Integration integration = 1;
}

message ListRequest {
  // Optional filters.
  string owner_id = 1;
  integration_registry.v1.Visibility visibility = 2 [(buf.validate.field).enum.defined_only = true];
  string api_url = 3;
}

message ListResponse {
  repeated integration_registry.v1.Integration integrations = 1;
}
