# Currently only v1 is supported.
version: v1

# Project configuration.
project:
  # Project name is used to identify a specific project.
  # Unique system wide.
  name: http
  # Variables are used to store project specific configuration, which
  # can be accessed from the project's code using:
  #  load("env", "<ENV_VAR_NAME>")
  # example:
  #  load("env", "myvar")
  vars:
    - # Variable name.
      name: myvar
      # Variable value.
      value: "myvalue"
  # Connections map integrations to a specific project.
  # A connection is used in project code using:
  #  load("@<integration_name>", "<connection_name>")
  # example:
  #  load("@http", "myhttp")
  connections:
    # HTTP: Allows to fire triggers when an incoming HTTP request
    #       is received on <autokitteh_base_url>/http/<project_name>/...
    - # Connection name. Unique project-wide.
      name: myhttp
      # Integration name to use for this connection.
      integration: "http"
    # Redis
    - name: myredis
      integration: "redis"
      vars: 
        - name: "URL"
          value: "redis://user:password@localhost:6789/3?dial_timeout=3&db=1&read_timeout=6s&max_retries=2"
    # gRPC
    - name: grpc
      integration: "grpc"
    # AWS
    - name: aws
      integration: "aws"
    # GitHub
    - name: github
      integration: "github"
    # Slack
    - name: slack
      integration: "slack"
    # Twilio
    - name: twilio
      integration: "twilio"
    # Google
    - name: google
      integration: "google"
  # Triggers specify how to route incoming events generated from the connections to this project.
  triggers:
    - name: http_get
      # Optional: event_type. For HTTP this is the method.
      event_type: get
      # Optional: event filter, specified in CEL (https://github.com/google/cel-spec).
      # All event data is available to the filter via the `data` field.
      # The event type is available via the `type` field.
      filter: "data.path == 'meow' && type == 'GET'"
      # Name of the connection the event originated from.
      connection: myhttp
      # Function to call when the event is received.
      call: http.star:on_http_get
      data:
        # Optional: path pattern. Can include named parameters.
        # Each parameter is enclosed in {}. Last parameter
        # can be suffixed with "..."", which will cause it to
        # capture the rest of the path.
        # Last parameter can also be "{$}", which specifies
        # it expects an exact match.
        path: "/test/{a}/{b...}"
