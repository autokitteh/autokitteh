# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import user_code_runner_svc_pb2 as autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2


class UserCodeRunnerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Exports = channel.unary_unary(
                '/autokitteh.remote.v1.UserCodeRunnerService/Exports',
                request_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExportsRequest.SerializeToString,
                response_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExportsResponse.FromString,
                _registered_method=True)
        self.Start = channel.unary_unary(
                '/autokitteh.remote.v1.UserCodeRunnerService/Start',
                request_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.StartRequest.SerializeToString,
                response_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.StartResponse.FromString,
                _registered_method=True)
        self.Execute = channel.unary_unary(
                '/autokitteh.remote.v1.UserCodeRunnerService/Execute',
                request_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExecuteResponse.FromString,
                _registered_method=True)
        self.ActivityReply = channel.unary_unary(
                '/autokitteh.remote.v1.UserCodeRunnerService/ActivityReply',
                request_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ActivityReplyRequest.SerializeToString,
                response_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ActivityReplyResponse.FromString,
                _registered_method=True)
        self.Health = channel.unary_unary(
                '/autokitteh.remote.v1.UserCodeRunnerService/Health',
                request_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.UserCodeRunnerHealthRequest.SerializeToString,
                response_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.UserCodeRunnerHealthResponse.FromString,
                _registered_method=True)


class UserCodeRunnerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Exports(self, request, context):
        """Get exports
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Called at start of session
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Execute(self, request, context):
        """Execute a function in the runtime (skipped if it's a reply)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivityReply(self, request, context):
        """Reply from activity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserCodeRunnerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Exports': grpc.unary_unary_rpc_method_handler(
                    servicer.Exports,
                    request_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExportsRequest.FromString,
                    response_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExportsResponse.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.StartRequest.FromString,
                    response_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.StartResponse.SerializeToString,
            ),
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExecuteRequest.FromString,
                    response_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExecuteResponse.SerializeToString,
            ),
            'ActivityReply': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivityReply,
                    request_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ActivityReplyRequest.FromString,
                    response_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ActivityReplyResponse.SerializeToString,
            ),
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.UserCodeRunnerHealthRequest.FromString,
                    response_serializer=autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.UserCodeRunnerHealthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'autokitteh.remote.v1.UserCodeRunnerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('autokitteh.remote.v1.UserCodeRunnerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserCodeRunnerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Exports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/autokitteh.remote.v1.UserCodeRunnerService/Exports',
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExportsRequest.SerializeToString,
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExportsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/autokitteh.remote.v1.UserCodeRunnerService/Start',
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.StartRequest.SerializeToString,
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.StartResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/autokitteh.remote.v1.UserCodeRunnerService/Execute',
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExecuteRequest.SerializeToString,
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ExecuteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ActivityReply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/autokitteh.remote.v1.UserCodeRunnerService/ActivityReply',
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ActivityReplyRequest.SerializeToString,
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.ActivityReplyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/autokitteh.remote.v1.UserCodeRunnerService/Health',
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.UserCodeRunnerHealthRequest.SerializeToString,
            autokitteh_dot_remote_dot_v1_dot_user__code__runner__svc__pb2.UserCodeRunnerHealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
