# create and delete a schedule via manifest
ak deploy --manifest schedule.yaml --file cron.star
return code == 0

ak trigger list
return code == 0
output regex 'trigger_id:"trg_0+3" +name:"cron" +connection_id:"con_3kthcr0n0+".*?event_type:"scheduler".*data:{key:"schedule" +value:{string:{v:"\*/1 \* \* \* \* \* \*"}}}'

wait 5s for session ses_00000000000000000000000007
ak session log ses_00000000000000000000000007 --no-timestamps --prints-only
return code == 0
output equals 'cron'

wait 5s for session ses_0000000000000000000000000a
ak session log ses_0000000000000000000000000a --no-timestamps --prints-only
return code == 0
output equals 'cron'

# remove trigger and effectively cancel cron
ak trigger delete trg_00000000000000000000000003
#ak deploy --manifest no_schedule.yaml --file cron.star
return code == 0

ak trigger list
return code == 0
output equals ''

# only 2 sessions since trigger and schedule were cancelled
wait 3s unless session ses_0000000000000000000000000d
ak session list
return code == 0
output regex '(?m)^session_id:"ses_0+a.*\n^session_id:"ses_0+7.*$'


-- schedule.yaml --
version: v1
project:
  name: cron
  triggers:
    - name: cron
      schedule: "*/1 * * * * * *"  # every sec
      call: cron.star:on_cron_trigger

-- no_schedule.yaml --
version: v1
project:
  name: cron
  triggers:

-- cron.star --
def on_cron_trigger():
    print("cron")
