# create and delete a schedule via CLI

ak project create --name schedules_project
return code == 0
output equals 'project_id: prj_00000000000000000000000001'

ak deploy --project schedules_project --file cron.star
return code == 0
output equals file deploy.txt

ak trigger create --schedule "*/1 * * * * * *" --env env_00000000000000000000000002 --call "cron.star:on_cron_trigger" --name cron_trg
return code == 0
output equals 'trigger_id: trg_00000000000000000000000005'

wait 5s for session ses_00000000000000000000000007
ak session log ses_00000000000000000000000007 --no-timestamps --prints-only
return code == 0
output equals 'cron'

wait 5s for session ses_0000000000000000000000000a
ak session log ses_0000000000000000000000000a --no-timestamps --prints-only
return code == 0
output equals 'cron'


# remove trigger and effectively cancel cron
ak trigger delete trg_00000000000000000000000005
return code == 0

ak trigger list
return code == 0
output equals ''

# only 2 sessions since trigger and schedule were cancelled
wait 3s unless session ses_0000000000000000000000000d
ak session list
return code == 0
output regex '(?m)^session_id:"ses_0+a.*\n^session_id:"ses_0+7.*$'

-- cron.star --
def on_cron_trigger():
    print("cron")

-- deploy.txt --
[plan] project "schedules_project": found, id="prj_00000000000000000000000001"
[exec] create_build: created "bld_00000000000000000000000003"
[exec] create_deployment: created "dep_00000000000000000000000004"
[exec] activate_deployment: activated
