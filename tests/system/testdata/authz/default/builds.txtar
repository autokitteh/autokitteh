user zumi

ak project create --name pz
return code == 0
capture_jq zpid .project_id

ak runtime build main.star
return code == 0

ak build upload --project pz build.akb
return code == 0
capture_jq bid .build_id

ak build get $bid -f
return code == 0
output equals_jq .build.project_id $zpid

# gizmo can't access zumi's builds.
user gizmo

ak build upload --project $zpid build.akb
return code == $RC_UNAUTHZ

ak build get $bid -f
return code == $RC_NOT_FOUND

# create a build on cats org
ak project create --name p --org $CATS_OID
return code == 0
capture_jq cpid .project_id

ak build upload --project $CATS_OID.p build.akb
return code == 0
capture_jq pbid .build_id

ak build download $pbid
return code == 0

user zumi
ak build download $pbid
return code == 0

ak build describe $pbid -f
return code == 0

ak build describe $bid -f
return code == 0

user gizmo

ak build list --project $cpid
return code == 0

ak build list --project $zpid
return code == $RC_UNAUTHZ

ak build describe $pbid -f
return code == 0

ak build describe $bid -f
return code == $RC_NOT_FOUND

ak build delete $bid 
return code == $RC_NOT_FOUND

ak build delete $pbid 
return code == 0

-- test-config.yaml --
ak:
    extra_args: ["-j", "--array_json_list"]

-- main.star --
def foo(): pass
