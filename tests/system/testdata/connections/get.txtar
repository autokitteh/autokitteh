# Preconditions: create project and connection.
ak project create --name my_project
return code == 0
output equals 'project_id: prj_00000000000000000000000001'

ak connection create my_connection --project my_project --integration http --connection-token my_url_path
return code == 0
output equals 'connection_id: con_00000000000000000000000003'

# Negative tests: get nonexistent connection name/ID, with/out --fail flag.
ak connection get my_project/bad_connection
return code == 0
output equals ''

ak connection get con_0000000000000000000000dead
return code == 0
output equals ''

ak connection get my_project/bad_connection --fail
output equals 'Error: connection not found'
return code == 10

ak connection get con_0000000000000000000000dead --fail
output equals 'Error: connection not found'
return code == 10

# Negative test: get connection by name, without project prefix.
ak connection get my_connection
output equals 'Error: invalid connection name "my_connection": missing project prefix'
return code == 1

# Get connection by name/ID, with/out JSON flag.
ak connection get my_project/my_connection
return code == 0
output contains 'connection_id:"con_00000000000000000000000003"'
output contains 'project_id:"prj_00000000000000000000000001"'
output contains 'integration_id:"int_0000000000f1201a7ed83f7cd5"'
output contains 'integration_token:"my_url_path"'
output contains 'name:"my_connection"'

ak connection get con_00000000000000000000000003 -J
return code == 0
output equals file expected_connection.json

-- expected_connection.json --
{
  "connection": {
    "connection_id": "con_00000000000000000000000003",
    "integration_id": "int_0000000000f1201a7ed83f7cd5",
    "integration_token": "my_url_path",
    "project_id": "prj_00000000000000000000000001",
    "name": "my_connection"
  }
}
