# Negative tests: deploy nonexistent project, by name/ID.
ak project deploy bad_project --file program.star
output equals 'Error: project: not_found'
return code == 10

ak project deploy prj_000000000000000bad0bad0bad --file program.star
output equals 'Error: project: not_found'
return code == 10

# Preconditions: create project and environment.
ak project create --name my_project
return code == 0
output equals 'project_id: prj_00000000000000000000000001'

# Negative test: deploy project without required flag.
ak project deploy my_project
output equals 'Error: at least one of the flags in the group [dir file] is required'
return code == 1

# Negative test: deploy project with nonexistent files and directories.
ak project deploy my_project --file bad_filename
output equals 'Error: stat bad_filename: no such file or directory'
return code == 10

ak project deploy my_project --dir bad_dir_name
output equals 'Error: stat bad_dir_name: no such file or directory'
return code == 10

# Deploy project from a single file.
ak project deploy my_project --file single_file.star
return code == 0
output contains 'build_id: bld_00000000000000000000000002'
output contains 'deployment_id: dep_00000000000000000000000003'

# Deploy project from a directory tree with multiple files.
ak project deploy my_project --dir directory
return code == 0
output contains 'build_id: bld_00000000000000000000000004'
output contains 'deployment_id: dep_00000000000000000000000005'

# Deploy project from both, alongside each other.
ak project deploy my_project --file single_file.star --dir directory
return code == 0
output contains 'build_id: bld_00000000000000000000000006'
output contains 'deployment_id: dep_00000000000000000000000007'

# Deploy project to default environment, by name/ID.
ak project deploy my_project --file single_file.star --env default
return code == 0
output contains 'build_id: bld_00000000000000000000000008'
output contains 'deployment_id: dep_00000000000000000000000009'

ak project deploy my_project --file single_file.star
return code == 0
output contains 'build_id: bld_0000000000000000000000000a'
output contains 'deployment_id: dep_0000000000000000000000000b'

ak project deploy my_project --file single_file.star
return code == 0
output contains 'build_id: bld_0000000000000000000000000c'
output contains 'deployment_id: dep_0000000000000000000000000d'

-- single_file.star --
print("single_file.star")

-- directory/file1.star --
print("directory/file1.star")

-- directory/subdirectory/file1.star --
print("directory/subdirectory/file1.star")

-- directory/subdirectory/file2.star --
print("directory/subdirectory/file2.star")
