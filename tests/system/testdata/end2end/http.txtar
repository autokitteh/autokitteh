# Deploy project with HTTP triggers that check session data.
ak deploy --manifest project.yaml
return code == 0

# Send HTTP GET request to trigger deployment to start new session.
http get /webhooks/00000000000000000000000003/
resp code == 202

wait 5s for session ses_00000000000000000000000007

ak session log my_project --no-timestamps --page-size 1 --order desc -J
return code == 0
output equals_json file expected_without_path.json

# Send HTTP POST request to trigger deployment to start new session.
http post /webhooks/00000000000000000000000003/test/aaa/bbb/ccc
resp code == 202

wait 5s for session ses_0000000000000000000000000a

ak session log my_project --no-timestamps --page-size 1 --order desc -J
return code == 0
output equals_json file expected_with_path.json

-- project.yaml --
version: v1

project:
  name: my_project
  triggers:
    - name: http
      type: webhook
      call: program.star:on_http

-- program.star --
def on_http(data, trigger, event):
    print(data)
    print(event.type)
    print(trigger)

-- expected_without_path.json --
{
    "state": {
        "completed": {
            "prints": [
                "data(body = {\"form\": None, \"bytes\": None, \"json\": None}, headers = {\"Accept-Encoding\": \"gzip\", \"User-Agent\": \"Go-http-client/1.1\"}, method = \"GET\", raw_url = \"/webhooks/00000000000000000000000003/\", trailers = {}, url = {\"fragment\": \"\", \"raw_path\": \"\", \"query\": {}, \"raw_fragment\": \"\", \"raw_query\": \"\", \"path\": \"/webhooks/00000000000000000000000003/\"})",
                "get",
                "trigger(name = \"http\")"
            ],
            "exports": {
                "on_http": {
                    "function": {
                        "executor_id": "run_00000000000000000000000008",
                        "name": "on_http",
                        "desc": {
                            "input": [
                                {
                                    "name": "data"
                                },
                                {
                                    "name": "trigger"
                                },
                                {
                                    "name": "event"
                                }
                            ]
                        },
                        "data": "b25faHR0cCMx"
                    }
                }
            },
            "return_value": {
                "nothing": {}
            }
        }
    }
}

-- expected_with_path.json --
{
    "state": {
        "completed": {
            "prints": [
                "data(body = {\"form\": None, \"bytes\": None, \"json\": None}, headers = {\"Accept-Encoding\": \"gzip\", \"User-Agent\": \"Go-http-client/1.1\", \"Content-Length\": \"0\"}, method = \"POST\", raw_url = \"/webhooks/00000000000000000000000003/test/aaa/bbb/ccc\", trailers = {}, url = {\"fragment\": \"\", \"raw_path\": \"\", \"query\": {}, \"raw_fragment\": \"\", \"raw_query\": \"\", \"path\": \"/webhooks/00000000000000000000000003/test/aaa/bbb/ccc\"})",
                "post",
                "trigger(name = \"http\")"
            ],
            "exports": {
                "on_http": {
                    "function": {
                        "executor_id": "run_0000000000000000000000000b",
                        "name": "on_http",
                        "desc": {
                            "input": [
                                {
                                    "name": "data"
                                },
                                {
                                    "name": "trigger"
                                },
                                {
                                    "name": "event"
                                }
                            ]
                        },
                        "data": "b25faHR0cCMx"
                    }
                }
            },
            "return_value": {
                "nothing": {}
            }
        }
    }
}
