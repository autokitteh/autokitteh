# Negative tests: build nonexistent project, by name/ID.
ak project build bad_project --from program.star
output equals 'Error: project "bad_project" not found'
return code == 10

ak project build prj_000000000000000n0nex1stent --from program.star
output equals 'Error: project "prj_000000000000000n0nex1stent" not found'
return code == 10

# Precondition: create project.
ak project create my_project
return code == 0
output equals 'project_id: prj_00000000000000000000000001'

# Negative test: build project without required flag.
ak project build my_project
output equals 'Error: required flag(s) "from" not set'
return code == 1

# Negative test: build project with nonexistent file.
ak project build my_project --from bad_filename
output equals 'Error: stat bad_filename: no such file or directory'
return code == 10

# Build project from a single file.
ak project build my_project --from single_file.star
return code == 0

# Build project from a directory tree with multiple files.
ak project build my_project --from directory
return code == 0

# Build project from both, alongside each other.
ak project build my_project --from single_file.star --from directory
return code == 0

-- single_file.star --
print("single_file.star")

-- directory/file1.star --
print("directory/file1.star")

-- directory/subdirectory/file1.star --
print("directory/subdirectory/file1.star")

-- directory/subdirectory/file2.star --
print("directory/subdirectory/file2.star")
