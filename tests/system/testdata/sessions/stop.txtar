# Preconditions: create & build project.
ak project create --name my_project
return code == 0

ak project build my_project --file main.star
return code == 0
output equals 'build_id: bld_00000000000000000000000003'

# Preconditions: start a slow session, and wait for it to start running.
ak session start --build-id bld_00000000000000000000000003 --entrypoint main.star:main
return code == 0
output equals 'session_id: ses_00000000000000000000000004'

ak session watch ses_00000000000000000000000004 --fail --end-state RUNNING --timeout 5s
return code == 0

# Stop the session gracefully.
ak session stop ses_00000000000000000000000004 --reason test
return code == 0

ak session watch ses_00000000000000000000000004 --timeout 5s
return code == 0

ak session log ses_00000000000000000000000004 -j
return code == 0
output contains "stop_request"

ak session log ses_00000000000000000000000004 --page-size 1 --order desc --no-timestamps -j
return code == 0
output equals_json file last_state.json

ak deploy --manifest test.yaml --file test.star
return code == 0

ak session start --deployment-id dep_0000000000000000000000000a --entrypoint test.star:test
return code == 0

ak session watch ses_0000000000000000000000000b --no-timestamps --end-state RUNNING --timeout 7s
return code == 0

ak session stop ses_0000000000000000000000000b --reason test
return code == 0

ak session log ses_0000000000000000000000000b --no-timestamps -j
return code == 0
output equals file test.txt

-- main.star --
def main():
  sleep(20)
  print("finished")

-- last_state.json --
{
  "state": {
    "stopped": {
      "reason": "test"
    }
  }
}

-- test.yaml --
version: v1

project:
  name: test
  connections:
    - name: mytest
      integration: test

-- test.star --
load("@test", "mytest")

def test():
  print("started")
  mytest.freeze(10, True)
  print("finished")

-- test.txt --
{"state":{"created":{}}}
{"state":{"running":{"run_id":"run_0000000000000000000000000c"}}}
{"state":{"running":{"run_id":"run_0000000000000000000000000c","call":{"function":{"executor_id":"run_0000000000000000000000000c","name":"test","desc":{},"data":"dGVzdCMx"}}}}}
{"print":{"text":"started"}}
{"call_spec":{"function":{"function":{"executor_id":"int_3kth00test8c093f7e9fccbf69","name":"freeze","desc":{"input":[{"name":"duration","optional":true},{"name":"allow_cancel","optional":true}]},"data":"Y29uXzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA4"}},"args":[{"integer":{"v":"10"}},{"boolean":{"v":true}}],"seq":1}}
{"call_attempt_start":{}}
{"stop_request":{"reason":"test"}}
{"state":{"stopped":{"reason":"test"}}}
