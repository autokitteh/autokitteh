$ # Create project p.
$ ${AK} project c --name p; echo $?
project_id: prj_00000000000000000000000001
0
$ # Get env that does not exists for p.
$ ${AK} env g -p p e; echo $?
0
$ ${AK} env g --fail p/e; echo $?
Error: env not found
10
$ # Create env for project p.
$ ${AK} env c -p p e1; echo $?
env_id: env_00000000000000000000000003
0
$ # Create env under project p for user meow.
$ ${AK} -j env g p/e1; echo $?
{"env":{"env_id":"env_00000000000000000000000003","project_id":"prj_00000000000000000000000001","name":"e1"}}
0
$ # List envs for project.
$ ${AK} -j env ls -p p; echo $?
{"env_id":"env_00000000000000000000000002","project_id":"prj_00000000000000000000000001","name":"default"}
{"env_id":"env_00000000000000000000000003","project_id":"prj_00000000000000000000000001","name":"e1"}
0
$ # Create another env under project p for user meow.
$ ${AK} env c -p p e2; echo $?
env_id: env_00000000000000000000000004
0
$ # List envs for project.
$ ${AK} -j env ls -p p; echo $?
{"env_id":"env_00000000000000000000000002","project_id":"prj_00000000000000000000000001","name":"default"}
{"env_id":"env_00000000000000000000000003","project_id":"prj_00000000000000000000000001","name":"e1"}
{"env_id":"env_00000000000000000000000004","project_id":"prj_00000000000000000000000001","name":"e2"}
0
$ # Get envs for project.
$ ${AK} -j env g p/e1; echo $?
{"env":{"env_id":"env_00000000000000000000000003","project_id":"prj_00000000000000000000000001","name":"e1"}}
0
